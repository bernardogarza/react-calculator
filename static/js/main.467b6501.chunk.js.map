{"version":3,"sources":["components/display/display.component.jsx","components/button/button.component.jsx","components/button-panel/button-panel.component.jsx","logic/operate.jsx","logic/calculate.jsx","components/app/App.component.jsx","index.js"],"names":["Display","props","result","className","defaultProps","Button","name","wide","color","clickHandler","style","width","backgroundColor","type","onClick","buttons","ButtonPanel","handleClick","buttonName","map","button","index","key","el","i","length","operate","numberOne","numberTwo","operation","n1","parseFloat","Big","n2","toString","Calculate","obj","numbers","includes","operations","equals","total","next","App","state","bind","this","setState","show","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.467b6501.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './display.style.scss';\n\n\nconst Display = (props) => {\n  const { result } = props;\n  return (\n    <div className=\"display\">{result}</div>\n  );\n};\n\nDisplay.propTypes = {\n  result: PropTypes.string,\n};\n\nDisplay.defaultProps = {\n  result: '0',\n};\n\nexport default Display;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './button.style.scss';\n\nconst Button = (props) => {\n  const {\n    name, wide, color, clickHandler,\n  } = props;\n\n  const handleClick = () => {\n    clickHandler(name);\n  };\n\n  return (\n    <div className=\"button\" style={{ width: wide === true ? '50%' : '25%', backgroundColor: color === true ? 'orange' : 'red' }}>\n      <button type=\"button\" style={{ backgroundColor: color === true ? '#ea974c' : '#dfdfdf' }} onClick={handleClick}>\n        {name}\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  wide: PropTypes.bool.isRequired,\n  color: PropTypes.bool.isRequired,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../button/button.component';\n\nimport './button-panel.style.scss';\n\nconst buttons = [\n  ['AC', '+/-', '%', 'รท'],\n  ['7', '8', '9', 'X'],\n  ['4', '5', '6', '-'],\n  ['1', '2', '3', '+'],\n  ['0', '.', '='],\n];\n\nconst ButtonPanel = (props) => {\n  const {\n    clickHandler,\n  } = props;\n\n  const handleClick = (buttonName) => {\n    clickHandler(buttonName);\n  };\n\n  return (\n    <div className=\"buttons\">\n      {\n        buttons.map((button, index) => (\n          <div className=\"rows\" key={`row${index + 1}}`}>\n            {button.map((el, i) => (\n              <Button\n                name={el}\n                key={el}\n                wide={el === '0'}\n                color={i === button.length - 1}\n                clickHandler={handleClick}\n              />\n            ))}\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n\nButtonPanel.propTypes = {\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default ButtonPanel;\n","// eslint-disable-next-line\nimport Big from 'big.js';\n\nconst operate = (numberOne, numberTwo, operation) => {\n  const n1 = parseFloat(Big(numberOne));\n  const n2 = parseFloat(Big(numberTwo));\n  switch (operation) {\n    case '+':\n      return (n1 + n2).toString();\n    case '-':\n      return (n1 - n2).toString();\n    case 'X':\n      return (n1 * n2).toString();\n    case 'รท':\n      if (n1 !== 0) {\n        return (n1 / n2).toString();\n      }\n      return 'Error';\n    default:\n  }\n  return operate;\n};\n\nexport default operate;\n","import operate from './operate';\n\nconst Calculate = (obj, buttonName) => {\n  const numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.'].includes(buttonName);\n  const operations = ['+', '-', 'X', '%', '+/-', 'รท'].includes(buttonName);\n  const equals = ['='].includes(buttonName);\n  let { total, next, operation } = obj;\n\n  if (buttonName === 'AC') {\n    total = null;\n    next = null;\n    operation = null;\n    return { next, total, operation };\n  }\n\n  if (equals && total && next && operation) {\n    total = operate(total, next, operation);\n    next = null;\n    operation = null;\n    return { next, total, operation };\n  }\n\n  if (numbers && total && !next && !operation) {\n    next = buttonName;\n    total = null;\n    operation = null;\n    return { next, total, operation };\n  }\n\n  if (numbers) {\n    if (total === null && next === null && buttonName === '0') {\n      return { next, total, operation };\n    }\n    next = next === null ? buttonName : next += buttonName;\n    return { next, total, operation };\n  }\n\n  if (operations && next && buttonName === '+/-') {\n    next = (parseFloat(next) * -1).toString();\n    return { next, total, operation };\n  }\n\n  if (operations && total && !next && !operation && buttonName === '+/-') {\n    next = (parseFloat(total) * -1).toString();\n    total = null;\n    return { next, total, operation };\n  }\n\n  if (operations && total && buttonName === '+/-') {\n    next = (parseFloat(total) * -1).toString();\n    return { next, total, operation };\n  }\n\n  if (operations && next && buttonName === '%') {\n    next = (parseFloat(next) / 100).toString();\n    return { next, total, operation };\n  }\n\n  if (operations && total && !next && !operation && buttonName === '%') {\n    total = (parseFloat(total) / 100).toString();\n    return { next, total, operation };\n  }\n\n  if (operations && total && buttonName === '%') {\n    next = (parseFloat(next) / 100).toString();\n    return { next, total, operation };\n  }\n\n  if (operations && next && total && operation) {\n    next = operate(total, next, operation);\n    total = null;\n    operation = null;\n    return { next, total, operation };\n  }\n\n  if (operations && total) {\n    operation = buttonName;\n    return { next, total, operation };\n  }\n\n  if (operations && buttonName !== '+/-' && next) {\n    total = next;\n    next = null;\n    operation = buttonName;\n    return { next, total, operation };\n  }\n\n  return { next, total, operation };\n};\n\nexport default Calculate;\n","import React, { Component } from 'react';\nimport Display from '../display/display.component';\nimport ButtonPanel from '../button-panel/button-panel.component';\nimport Calculate from '../../logic/calculate';\n\nimport './App.style.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: null,\n      next: null,\n      // eslint-disable-next-line\n      operation: null,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(buttonName) {\n    this.setState(state => Calculate(state, buttonName));\n  }\n\n  render() {\n    // eslint-disable-next-line react/destructuring-assignment\n    const show = this.state.next ? this.state.next : this.state.total;\n    return (\n      <div className=\"app\">\n        <Display result={show} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App.component';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}